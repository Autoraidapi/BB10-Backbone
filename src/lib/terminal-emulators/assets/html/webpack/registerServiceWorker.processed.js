const isLocalhost=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));export default function register(){if("production"===process.env.NODE_ENV&&"serviceWorker"in navigator){if(new URL(process.env.PUBLIC_URL,window.location).origin!==window.location.origin)return;window.addEventListener("load",(()=>{const e=process.env.PUBLIC_URL+"/service-worker.js";isLocalhost?checkValidServiceWorker(e):registerValidSW(e)}))}}function registerValidSW(e){navigator.serviceWorker.register(e).then((e=>{e.onupdatefound=()=>{const o=e.installing;o.onstatechange=()=>{"installed"===o.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))}}})).catch((e=>{console.error("Error during service worker registration:",e)}))}function checkValidServiceWorker(e){fetch(e).then((o=>{404===o.status||-1===o.headers.get("content-type").indexOf("javascript")?navigator.serviceWorker.ready.then((e=>{e.unregister().then((()=>{window.location.reload()}))})):registerValidSW(e)})).catch((()=>{console.log("No internet connection found. App is running in offline mode.")}))}export function unregister(){"serviceWorker"in navigator&&navigator.serviceWorker.ready.then((e=>{e.unregister()}))}